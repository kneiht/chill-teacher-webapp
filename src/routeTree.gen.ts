/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SplatRouteImport } from './routes/$splat'
import { Route as mainRouteRouteImport } from './routes/(main)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LessonsIndexRouteImport } from './routes/lessons/index'
import { Route as mainSettingsRouteImport } from './routes/(main)/settings'
import { Route as mainProfileRouteImport } from './routes/(main)/profile'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as LessonsEverybodyUp0Unit1PresentationRouteRouteImport } from './routes/lessons/everybody-up-0/unit-1/presentation.route'

const SplatRoute = SplatRouteImport.update({
  id: '/$splat',
  path: '/$splat',
  getParentRoute: () => rootRouteImport,
} as any)
const mainRouteRoute = mainRouteRouteImport.update({
  id: '/(main)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LessonsIndexRoute = LessonsIndexRouteImport.update({
  id: '/lessons/',
  path: '/lessons/',
  getParentRoute: () => rootRouteImport,
} as any)
const mainSettingsRoute = mainSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => mainRouteRoute,
} as any)
const mainProfileRoute = mainProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => mainRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const LessonsEverybodyUp0Unit1PresentationRouteRoute =
  LessonsEverybodyUp0Unit1PresentationRouteRouteImport.update({
    id: '/lessons/everybody-up-0/unit-1/presentation',
    path: '/lessons/everybody-up-0/unit-1/presentation',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof mainRouteRouteWithChildren
  '/$splat': typeof SplatRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/profile': typeof mainProfileRoute
  '/settings': typeof mainSettingsRoute
  '/lessons': typeof LessonsIndexRoute
  '/lessons/everybody-up-0/unit-1/presentation': typeof LessonsEverybodyUp0Unit1PresentationRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof mainRouteRouteWithChildren
  '/$splat': typeof SplatRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/profile': typeof mainProfileRoute
  '/settings': typeof mainSettingsRoute
  '/lessons': typeof LessonsIndexRoute
  '/lessons/everybody-up-0/unit-1/presentation': typeof LessonsEverybodyUp0Unit1PresentationRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/(main)': typeof mainRouteRouteWithChildren
  '/$splat': typeof SplatRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(main)/profile': typeof mainProfileRoute
  '/(main)/settings': typeof mainSettingsRoute
  '/lessons/': typeof LessonsIndexRoute
  '/lessons/everybody-up-0/unit-1/presentation': typeof LessonsEverybodyUp0Unit1PresentationRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$splat'
    | '/login'
    | '/signup'
    | '/profile'
    | '/settings'
    | '/lessons'
    | '/lessons/everybody-up-0/unit-1/presentation'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$splat'
    | '/login'
    | '/signup'
    | '/profile'
    | '/settings'
    | '/lessons'
    | '/lessons/everybody-up-0/unit-1/presentation'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(main)'
    | '/$splat'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/(main)/profile'
    | '/(main)/settings'
    | '/lessons/'
    | '/lessons/everybody-up-0/unit-1/presentation'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  mainRouteRoute: typeof mainRouteRouteWithChildren
  SplatRoute: typeof SplatRoute
  LessonsIndexRoute: typeof LessonsIndexRoute
  LessonsEverybodyUp0Unit1PresentationRouteRoute: typeof LessonsEverybodyUp0Unit1PresentationRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$splat': {
      id: '/$splat'
      path: '/$splat'
      fullPath: '/$splat'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)': {
      id: '/(main)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lessons/': {
      id: '/lessons/'
      path: '/lessons'
      fullPath: '/lessons'
      preLoaderRoute: typeof LessonsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)/settings': {
      id: '/(main)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof mainSettingsRouteImport
      parentRoute: typeof mainRouteRoute
    }
    '/(main)/profile': {
      id: '/(main)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof mainProfileRouteImport
      parentRoute: typeof mainRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/lessons/everybody-up-0/unit-1/presentation': {
      id: '/lessons/everybody-up-0/unit-1/presentation'
      path: '/lessons/everybody-up-0/unit-1/presentation'
      fullPath: '/lessons/everybody-up-0/unit-1/presentation'
      preLoaderRoute: typeof LessonsEverybodyUp0Unit1PresentationRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface mainRouteRouteChildren {
  mainProfileRoute: typeof mainProfileRoute
  mainSettingsRoute: typeof mainSettingsRoute
}

const mainRouteRouteChildren: mainRouteRouteChildren = {
  mainProfileRoute: mainProfileRoute,
  mainSettingsRoute: mainSettingsRoute,
}

const mainRouteRouteWithChildren = mainRouteRoute._addFileChildren(
  mainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  mainRouteRoute: mainRouteRouteWithChildren,
  SplatRoute: SplatRoute,
  LessonsIndexRoute: LessonsIndexRoute,
  LessonsEverybodyUp0Unit1PresentationRouteRoute:
    LessonsEverybodyUp0Unit1PresentationRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
